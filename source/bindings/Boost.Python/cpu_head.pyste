
Include("cCPUMemory.h")
Include("cInstruction.h")
Include("cHardwareBase.h")
Include("cCodeLabel.h")

cHeadCPU = Class("cHeadCPU", "cpu_head-fixups.hh")
set_policy(cHeadCPU.GetCurHardware, return_internal_reference())
set_policy(cHeadCPU.GetMainHardware, return_internal_reference())

exclude(cHeadCPU.FlagCopied)
exclude(cHeadCPU.FlagMutated)
exclude(cHeadCPU.FlagExecuted)
exclude(cHeadCPU.FlagPointMut)
exclude(cHeadCPU.FlagCopyMut)
exclude(cHeadCPU.FlagBreakpoint)

add_method(cHeadCPU, "cHeadCPU_GetFlagCopied")
add_method(cHeadCPU, "cHeadCPU_GetFlagMutated")
add_method(cHeadCPU, "cHeadCPU_GetFlagExecuted")
add_method(cHeadCPU, "cHeadCPU_GetFlagPointMut")
add_method(cHeadCPU, "cHeadCPU_GetFlagCopyMut")
add_method(cHeadCPU, "cHeadCPU_GetFlagBreakpoint")

add_method(cHeadCPU, "cHeadCPU_SetFlagCopied")
add_method(cHeadCPU, "cHeadCPU_SetFlagMutated")
add_method(cHeadCPU, "cHeadCPU_SetFlagExecuted")
add_method(cHeadCPU, "cHeadCPU_SetFlagPointMut")
add_method(cHeadCPU, "cHeadCPU_SetFlagCopyMut")
add_method(cHeadCPU, "cHeadCPU_SetFlagBreakpoint")

rename(cHeadCPU.cHeadCPU_GetFlagCopied, "GetFlagCopied");
rename(cHeadCPU.cHeadCPU_GetFlagMutated, "GetFlagMutated");
rename(cHeadCPU.cHeadCPU_GetFlagExecuted, "GetFlagExecuted");
rename(cHeadCPU.cHeadCPU_GetFlagPointMut, "GetFlagPointMut");
rename(cHeadCPU.cHeadCPU_GetFlagCopyMut, "GetFlagCopyMut");
rename(cHeadCPU.cHeadCPU_GetFlagBreakpoint, "GetFlagBreakpoint");

rename(cHeadCPU.cHeadCPU_SetFlagCopied, "SetFlagCopied");
rename(cHeadCPU.cHeadCPU_SetFlagMutated, "SetFlagMutated");
rename(cHeadCPU.cHeadCPU_SetFlagExecuted, "SetFlagExecuted");
rename(cHeadCPU.cHeadCPU_SetFlagPointMut, "SetFlagPointMut");
rename(cHeadCPU.cHeadCPU_SetFlagCopyMut, "SetFlagCopyMut");
rename(cHeadCPU.cHeadCPU_SetFlagBreakpoint, "SetFlagBreakpoint");


# vim: set ft=python:
# vim: set ft=python:
