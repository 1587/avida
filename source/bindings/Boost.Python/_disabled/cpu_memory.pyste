
Import("genome.pyste")

cCPUMemory = Class("cCPUMemory", "cpu_memory-fixups.hh")

exclude(cCPUMemory.FlagCopied)
exclude(cCPUMemory.FlagMutated)
exclude(cCPUMemory.FlagExecuted)
exclude(cCPUMemory.FlagPointMut)
exclude(cCPUMemory.FlagCopyMut)
exclude(cCPUMemory.FlagInjected)
exclude(cCPUMemory.FlagBreakpoint)

add_method(cCPUMemory, "cCPUMemory_GetFlagCopied")
add_method(cCPUMemory, "cCPUMemory_GetFlagMutated")
add_method(cCPUMemory, "cCPUMemory_GetFlagExecuted")
add_method(cCPUMemory, "cCPUMemory_GetFlagPointMut")
add_method(cCPUMemory, "cCPUMemory_GetFlagCopyMut")
add_method(cCPUMemory, "cCPUMemory_GetFlagInjected")
add_method(cCPUMemory, "cCPUMemory_GetFlagBreakpoint")

add_method(cCPUMemory, "cCPUMemory_SetFlagCopied")
add_method(cCPUMemory, "cCPUMemory_SetFlagMutated")
add_method(cCPUMemory, "cCPUMemory_SetFlagExecuted")
add_method(cCPUMemory, "cCPUMemory_SetFlagPointMut")
add_method(cCPUMemory, "cCPUMemory_SetFlagCopyMut")
add_method(cCPUMemory, "cCPUMemory_SetFlagInjected")
add_method(cCPUMemory, "cCPUMemory_SetFlagBreakpoint")

rename(cCPUMemory.cCPUMemory_GetFlagCopied, "GetFlagCopied");
rename(cCPUMemory.cCPUMemory_GetFlagMutated, "GetFlagMutated");
rename(cCPUMemory.cCPUMemory_GetFlagExecuted, "GetFlagExecuted");
rename(cCPUMemory.cCPUMemory_GetFlagPointMut, "GetFlagPointMut");
rename(cCPUMemory.cCPUMemory_GetFlagCopyMut, "GetFlagCopyMut");
rename(cCPUMemory.cCPUMemory_GetFlagInjected, "GetFlagInjected");
rename(cCPUMemory.cCPUMemory_GetFlagBreakpoint, "GetFlagBreakpoint");

rename(cCPUMemory.cCPUMemory_SetFlagCopied, "SetFlagCopied");
rename(cCPUMemory.cCPUMemory_SetFlagMutated, "SetFlagMutated");
rename(cCPUMemory.cCPUMemory_SetFlagExecuted, "SetFlagExecuted");
rename(cCPUMemory.cCPUMemory_SetFlagPointMut, "SetFlagPointMut");
rename(cCPUMemory.cCPUMemory_SetFlagCopyMut, "SetFlagCopyMut");
rename(cCPUMemory.cCPUMemory_SetFlagInjected, "SetFlagInjected");
rename(cCPUMemory.cCPUMemory_SetFlagBreakpoint, "SetFlagBreakpoint");


# vim: set ft=python:
