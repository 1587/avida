
Include("cHardwareTracer.h")
Include("organism.hh")

cCPUTestInfo = Class("cCPUTestInfo", "cCPUTestInfo.h")
# returns std::ofstream &, i.e., not the Python Way.
exclude(cCPUTestInfo.GetTraceFP)
set_policy(cCPUTestInfo.GetTestOrganism, return_internal_reference())
set_policy(cCPUTestInfo.GetColonyOrganism, return_internal_reference())
set_policy(cCPUTestInfo.GetColonyOrganism, return_internal_reference())
# Another reason to use ref-counting... Dangerous return value policy in use:
set_policy(cCPUTestInfo.GetTracer, return_value_policy(reference_existing_object))

# vim: set ft=python:
