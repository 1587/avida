
from AvidaUtils.TestUtil import ConsistencyCheck


Import('environment')
e = environment

Import('avida_exe')

TestsName = 'Default-CPU'
ConfigDir = e.Dir('$execPrefix')
GenesisFile = e.File('avida-smt.cfg', ConfigDir)
InstSetFile = e.File('inst_set.smt', ConfigDir)
EnvironmentFile = e.File('environment.cfg', ConfigDir)
StartCreatureFile = e.File('organism.smt', ConfigDir)

AvidaArgs = "-c %(GenesisFile)s -set WORLD_X 40 -set WORLD_Y 40 -set INST_SET %(InstSetFile)s -set ENVIRONMENT_FILE %(EnvironmentFile)s -set START_CREATURE %(StartCreatureFile)s -seed %(Seed)s -set EVENT_FILE %(EventsFile)s -set DATA_DIR %(DataDir)s" % {
  'GenesisFile':GenesisFile.path,
  'InstSetFile':InstSetFile.path,
  'EnvironmentFile':EnvironmentFile.path,
  'StartCreatureFile':StartCreatureFile.path,
  'Seed':'%(Seed)s',
  'EventsFile':'%(EventsFile)s',
  'DataDir':'%(DataDir)s',
}

RunLength = '500'
TestDirBase = e.Dir('Seed_')
SeedSet = range(100,105)
OutputFileName = 'detail_pop.%s' % RunLength

ConsistencyCheck(e, 'Default-SMT',
  run_length = RunLength,
  seed_set = SeedSet,
  run_subdir_path_base = TestDirBase.path,
  output_file_name = OutputFileName,
  expectation_file_path_base = TestDirBase.srcnode().path,
  expectation_file_name = '%s.expected_last_line' % OutputFileName,
  avida_exe_path = avida_exe[0].path,
  avida_args = AvidaArgs,
)


# vim: set ft=python:
